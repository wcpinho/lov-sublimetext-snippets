<snippet>
    <content><![CDATA[
//Usage: \$(element).maxLength(500,".charLength");
\$.fn.maxLength = function(max,target){
    this.each(function(){
        var type = this.tagName.toLowerCase();
        var inputType = this.type ? this.type.toLowerCase() : null;
        if(type == "input" && inputType == "text" || inputType == "password"){
            this.onkeyup = function(){
                if(target != null){ \$(target).text(max - this.value.length); }
            };
            this.maxLength = max;
        }else if(type == "textarea"){
            this.onkeypress = function(e){
            var ob = e || event;
            var keyCode = ob.keyCode;
            var hasSelection = document.selection? document.selection.createRange().text.length > 0 : this.selectionStart != this.selectionEnd;
            return !(this.value.length >= max && (keyCode > 50 || keyCode == 32 || keyCode == 0 || keyCode == 13) && !ob.ctrlKey && !ob.altKey && !hasSelection);
            };
            this.onkeyup = function(){
                if(target != null){ \$(target).text(max - this.value.length); }
                if(this.value.length > max){
                    this.value = this.value.substring(0,max);
                }
            };
        }
    });
};
]]></content>
    <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
    <tabTrigger>maxLength</tabTrigger>
    <!-- Optional: Set a scope to limit where the snippet will trigger -->
    <scope>source.js</scope>
</snippet>
